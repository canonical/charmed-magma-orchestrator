name: orc8r-metricsd

on:
  push:
    paths:
      - "orc8r-metricsd-operator/**"

jobs:
  orc8r-metricsd-lint-report:
    uses: ./.github/workflows/lint-report.yml
    with:
      charm_dir: orc8r-metricsd-operator

  orc8r-metricsd-static-analysis:
    uses: ./.github/workflows/static-analysis.yml
    with:
      charm_dir: orc8r-metricsd-operator

  orc8r-metricsd-unit-tests-with-coverage:
    uses: ./.github/workflows/unit-tests.yml
    with:
      charm_dir: orc8r-metricsd-operator

  orc8r-metricsd-integration-test:
    name: Integration tests (orc8r-metricsd)
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup operator environment
        run: |
          echo "# Initialize LXD"
          /usr/bin/sudo lxd init --auto

          echo "# Configure LXD"
          /usr/bin/sudo lxc --project charmcraft project create local:charmcraft || true
          /usr/bin/sudo lxc --project charmcraft profile device add default root disk path=/ pool=default type=disk || true
          /usr/bin/sudo lxc --project charmcraft profile device add default eth0 nic name=eth0 network=lxdbr0 || true
          /usr/bin/sudo lxc --project charmcraft profile set default environment.http_proxy http://squid.internal:3128/
          /usr/bin/sudo lxc --project charmcraft profile set default environment.https_proxy http://squid.internal:3128/
          /usr/bin/sudo lxc --project charmcraft profile set default environment.HTTP_PROXY http://squid.internal:3128/
          /usr/bin/sudo lxc --project charmcraft profile set default environment.HTTPS_PROXY http://squid.internal:3128/

          echo "# Install tox"
          /usr/bin/sudo apt update -yqq
          /usr/bin/sudo apt install -yqq python3-pip
          /usr/bin/sudo --preserve-env=http_proxy,https_proxy,no_proxy pip3 install tox

          echo "# Install Juju"
          /usr/bin/sudo snap install juju --classic --channel=latest/stable

          echo "# Install charmcraft"
          /usr/bin/sudo snap install charmcraft --classic --channel=latest/stable

          echo "# Install microk8s"
          /usr/bin/sudo snap install microk8s --classic

          echo "# Initialize microk8s"
          /usr/bin/bash -c "sudo usermod -a -G microk8s $USER"
          /usr/bin/sg microk8s -c "microk8s status --wait-ready"
          /usr/bin/sg microk8s -c "microk8s enable hostpath-storage dns:10.130.64.38,10.130.64.39"

          echo "# Bootstrap controller"
          sleep 180  # Microk8s needs time to initialize properly
          /usr/bin/sg microk8s -c "juju bootstrap --debug --verbose microk8s integration-tests-$GITHUB_RUN_ID --model-default test-mode=true --model-default automatically-retry-hooks=true --model-default logging-config='<root>=DEBUG'  --bootstrap-constraints=''"

      - name: Run integration tests
        run: cd orc8r-metricsd-operator && tox -e integration

      - name: Archive charmcraft logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: charmcraft-logs
          path: /home/runner/snap/charmcraft/common/cache/charmcraft/log/*.log

      - name: Clean up
        if: always()
        run: |
          yes | juju kill-controller integration-tests-$GITHUB_RUN_ID

  orc8r-metricsd-charmhub-upload:
    uses: ./.github/workflows/upload-charm.yml
    secrets: inherit
    with:
      charm: orc8r-metricsd-operator
