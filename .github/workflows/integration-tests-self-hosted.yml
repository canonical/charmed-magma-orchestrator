name: Integration Tests on Self-Hosted Runner

on:
  workflow_call:
    inputs:
      charm_dir:
        required: true
        type: string

jobs:
  integration-test:
    name: Integration tests for ${{ inputs.charm_dir }}
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Environment Variables
        uses: tw3lveparsecs/github-actions-setvars@latest
        with:
          varFilePath: ./.github/variables/dependencies_versions.env
      - name: Setup operator environment
        run: |
          echo "# Initialize LXD"
          /usr/bin/sudo lxd init --auto

          echo "# Configure LXD"
          /usr/bin/sudo lxc --project charmcraft project create local:charmcraft || true
          /usr/bin/sudo lxc --project charmcraft profile device add default root disk path=/ pool=default type=disk || true
          /usr/bin/sudo lxc --project charmcraft profile device add default eth0 nic name=eth0 network=lxdbr0 || true
          /usr/bin/sudo lxc --project charmcraft profile set default environment.http_proxy http://squid.internal:3128/
          /usr/bin/sudo lxc --project charmcraft profile set default environment.https_proxy http://squid.internal:3128/
          /usr/bin/sudo lxc --project charmcraft profile set default environment.HTTP_PROXY http://squid.internal:3128/
          /usr/bin/sudo lxc --project charmcraft profile set default environment.HTTPS_PROXY http://squid.internal:3128/

          echo "# Install tox"
          /usr/bin/sudo apt update -yqq
          /usr/bin/sudo apt install -yqq python3-pip
          /usr/bin/sudo --preserve-env=http_proxy,https_proxy,no_proxy pip3 install tox

          echo "# Install Juju"
          if ! command -v juju &> /dev/null; then
            /usr/bin/sudo snap install juju --classic --channel=$JUJU_VERSION
          else
            /usr/bin/sudo snap refresh juju --classic --channel=$JUJU_VERSION
          fi

          echo "# Install charmcraft"
          /usr/bin/sudo snap install charmcraft --classic --channel=latest/stable

          echo "# Install microk8s"
          if ! command -v microk8s &> /dev/null; then
            /usr/bin/sudo snap install microk8s --channel=$MICROK8S_VERSION
          else
            /usr/bin/sudo snap refresh microk8s --channel=$MICROK8S_VERSION
          fi

          echo "# Initialize microk8s"
          /usr/bin/bash -c "sudo usermod -a -G snap_microk8s $USER"
          /usr/bin/sg snap_microk8s -c "microk8s status --wait-ready"
          /usr/bin/sg snap_microk8s -c "sudo microk8s enable hostpath-storage dns:10.130.64.38,10.130.64.39"

          echo "# Bootstrap controller"
          sleep 180  # Microk8s needs time to initialize properly
          /usr/bin/sg snap_microk8s -c "juju bootstrap --debug --verbose microk8s integration-tests-$GITHUB_RUN_ID --model-default test-mode=true --model-default automatically-retry-hooks=true --model-default logging-config='<root>=DEBUG'  --bootstrap-constraints=''"

      - name: Run integration tests
        run: cd ${{ inputs.charm_dir }} && tox -e integration
      - name: Archive charmcraft logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: charmcraft-logs
          path: /home/runner/snap/charmcraft/common/cache/charmcraft/log/*.log

      - name: Clean up
        if: always()
        run: |
          juju kill-controller --no-prompt integration-tests-$GITHUB_RUN_ID -t0
